name: Deployment

on:
  push:
    branches: [ feat/deploy-raspberry ]

jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    env:
      working_directory: ./back

    strategy:
      fail-fast: false
      matrix:
          os: [ubuntu-latest]
          php: [7.4]
          node: [14]
          mysql: [8.0]

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
            php-version: "${{ matrix.php }}"
            extensions: intl
            tools: symfony
            coverage: none

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
            node-version: "${{ matrix.node }}"

      - name: Shutdown default MySQL
        run: sudo service mysql stop

      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: "${{ matrix.mysql }}"
          mysql root password: "root"
          mysql database: "whereat"

      - name: Output PHP version for Symfony CLI
        run: php -v | head -n 1 | awk '{ print $2 }' > .php-version

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install PHP dependencies
        run: composer install --no-interaction

      - name: Get Yarn cache directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install JS dependencies
        run: yarn install

      - run: docker ps -a

      - name: Prepare test application database
        run: |
          APP_DEBUG=1 bin/console doctrine:database:create -vvv
          bin/console doctrine:migrations:migrate -n -vvv

      - name: Prepare test application assets
        run: yarn build

      - name: Prepare test application cache
        run: bin/console cache:warmup -vvv

  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Run script test
      uses: appleboy/ssh-action@master
      env:
        RELEASE_NB: "3"
        PROJECT_PATH: "/var/www/yannlefresne.tech"
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        envs: RELEASE_NB,PROJECT_PATH
        script: |
          RELEASE_DIR=$(date +%Y%m%d%H%M%S)

          git clone -b feat/deploy-raspberry --depth 1 --single-branch git@github.com:yalefresne/whereat.git $PROJECT_PATH/releases/$RELEASE_DIR

          cd $PROJECT_PATH/releases/
          DIRCOUNT="$(find . -mindepth 1 -maxdepth 1 -type d | wc -l | xargs)"
          echo $DIRCOUNT
          if [ $DIRCOUNT -gt $RELEASE_NB ];then
              rm -rf `ls -Ft | grep '/$' | tail -1`
          fi

          if [ -d $PROJECT_PATH/current ];then
            rm -rf $PROJECT_PATH/current
          fi

          ln -s $PROJECT_PATH/releases/$RELEASE_DIR $PROJECT_PATH/current

          if [ -f $PROJECT_PATH/current/.env ];then
            rm $PROJECT_PATH/current/.env
          fi

          ln -s $PROJECT_PATH/shared/.env $PROJECT_PATH/current/.env

          cd $PROJECT_PATH/current/

          php ~/composer.phar install --no-progress --prefer-dist --optimize-autoloader
          php bin/console --no-interaction d:m:m
          php bin/console cache:warmup
